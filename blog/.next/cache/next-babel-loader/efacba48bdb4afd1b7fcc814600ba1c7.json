{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/julien.bonnin/Work/perso/acme/blog/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport { apiClient } from \"@acme/api/client\";\n\nvar BlogIndex = function BlogIndex(_ref) {\n  var posts = _ref.posts;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Acme's blog\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(Link, {\n      passHref: true,\n      href: \"/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nBlogIndex.getInitialProps = function _callee() {\n  var posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(apiClient.posts.getListing());\n\n        case 2:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: posts\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default BlogIndex;","map":{"version":3,"sources":["/Users/julien.bonnin/Work/perso/acme/blog/pages/index.tsx"],"names":["BlogIndex","posts","post","apiClient"],"mappings":";;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAA,IAAA,MAAA,WAAA;AAGA,SAAA,SAAA,QAAA,kBAAA;;AAMA,IAAMA,SAA0B,GAAG,SAA7BA,SAA6B,CAAA,IAAA,EAAe;AAAA,MAAZC,KAAY,GAAA,IAAA,CAAZA,KAAY;AAChD,SACE,KAAA,CAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EACE,KAAA,CAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EADF,aACE,CADF,EAEE,KAAA,CAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EACG,KAAK,CAAL,GAAA,CAAU,UAAA,IAAA,EAAI;AAAA,WACb,KAAA,CAAA,IAAA,EAAA;AAAI,MAAA,GAAG,EAAEC,IAAI,CAAb,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAAA,EACE,KAAA,CAAA,IAAA,EAAA;AAAM,MAAA,QAAQ,EAAd,IAAA;AAAe,MAAA,IAAI,EAAA,IAAA,MAAA,CAAMA,IAAI,CAA7B,EAAmB,CAAnB;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAAA,EACE,KAAA,CAAA,GAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAAA,EAAIA,IAAI,CAHC,KAGT,CADF,CADF,CADa;AAJrB,GAIO,CADH,CAFF,CADF;AADF,CAAA;;AAiBAF,SAAS,CAATA,eAAAA,GAA4B,SAAA,OAAA,GAAA;AAAA,MAAA,KAAA;AAAA,SAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,iBAAA,mBAAA,CAAA,KAAA,CACSG,SAAS,CAATA,KAAAA,CADT,UACSA,EADT,CAAA;;AAAA,aAAA,CAAA;AACpBF,UAAAA,KADoB,GAAA,QAAA,CAAA,IACpBA;AADoB,iBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAEnB;AAAEA,YAAAA,KAAK,EAALA;AAAF,WAFmB,CAAA;;AAAA,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,CAAA;AAA5BD,CAAAA;;AAKA,eAAA,SAAA","sourcesContent":["import * as React from \"react\";\n\nimport Link from \"next/link\";\nimport { Models } from \"@acme/api\";\nimport { NextPage } from \"next\";\nimport { apiClient } from \"@acme/api/client\";\n\ninterface Props {\n  posts: Models.Post[];\n}\n\nconst BlogIndex: NextPage<Props> = ({ posts }) => {\n  return (\n    <div>\n      <h1>Acme's blog</h1>\n      <ul>\n        {posts.map(post => (\n          <li key={post.id}>\n            <Link passHref href={`/${post.id}`}>\n              <a>{post.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nBlogIndex.getInitialProps = async () => {\n  const posts: Models.Post[] = await apiClient.posts.getListing();\n  return { posts };\n};\n\nexport default BlogIndex;\n"]},"metadata":{},"sourceType":"module"}